package hadoop.yarn;

option java_package = "org.apache.hadoop.yarn.proto";

option java_outer_classname = "POSUMProtos";

import "yarn_protos.proto";

import "yarn_service_protos.proto";

import "yarn_server_common_service_protos.proto";

enum EntityTypeProto {
    TYPE_APP = 0;
    TYPE_JOB = 1;
    TYPE_TASK = 2;
    TYPE_APP_HISTORY = 3;
    TYPE_JOB_HISTORY = 4;
    TYPE_TASK_HISTORY = 5;
    TYPE_HISTORY = 6;
}

message AppProfileProto {
    required string id = 1;
    optional int64 startTime = 2;
    optional int64 finishTime = 3;
    optional string user = 4;
    optional string name = 5;
    optional AppStateProto state = 6;
    optional AppStatusProto status = 7;
    optional AppTrackingUIProto trackingUI = 8;

    enum AppStateProto {
        STATE_NULL = 0;
        STATE_NEW = 1;
        STATE_NEW_SAVING = 2;
        STATE_SUBMITTED = 3;
        STATE_ACCEPTED = 4;
        STATE_RUNNING = 5;
        STATE_FINISHED = 6;
        STATE_FAILED = 7;
        STATE_KILLED = 8;
    }

    enum AppStatusProto {
        STATUS_NULL = 0;
        STATUS_UNDEFINED = 1;
        STATUS_SUCCEEDED = 2;
        STATUS_FAILED = 3;
        STATUS_KILLED = 4;
    }

    enum AppTrackingUIProto {
        UI_NULL = 0;
        UI_RM = 1;
        UI_AM = 2;
        UI_HISTORY = 3;
    }
}

message JobProfileProto {
    required string id = 1;
    optional string name = 2;
    optional string appId = 3;
    optional string user = 4;
    optional int32 totalMapTasks = 5;
    optional int32 totalReduceTasks = 6;
    optional int32 inputSplits = 7; // only from conf
    optional int64 inputBytes = 8; // only from conf
    optional int64 outputBytes = 9; // only in history
    optional int64 submitTime = 10; // only in history
    optional int64 startTime = 11;
    optional int64 finishTime = 12;
    optional JobStateProto state = 13;
    optional float mapProgress = 14;
    optional float reduceProgress = 15;
    optional int32 completedMaps = 16;
    optional int32 completedReduces = 17;
    optional bool uberized = 18;
    optional int32 avgMapDuration = 19;
    optional int32 avgReduceDuration = 20;
    optional int32 avgTaskDuration = 21;
    optional int32 avgShuffleDuration = 22;
    optional int32 avgMergeDuration = 23;

    enum JobStateProto {
        STATE_NULL = 0;
        STATE_NEW = 1;
        STATE_INITED = 2;
        STATE_RUNNING = 3;
        STATE_SUCCEEDED = 4;
        STATE_FAILED = 5;
        STATE_KILLED = 6;
        STATE_ERROR = 7;
    }
}

message TaskProfileProto {
    required string id = 1;
    optional string appId = 2;
    optional string jobId = 3;
    optional int64 inputBytes = 4;
    optional int64 inputRecords = 5;
    optional int64 outputBytes = 6;
    optional int64 outputRecords = 7;
    optional int64 expectedInputBytes = 8;
    optional int64 startTime = 9;
    optional int64 finishTime = 10;
    optional TaskTypeProto type = 11;
    optional float reportedProgress = 12;
    optional string successfulAttempt = 13;
    //    optional Counters counters = 14;

    enum TaskTypeProto {
        TYPE_NULL = 0;
        TYPE_MAP = 1;
        TYPE_REDUCE = 2;
    }
}

message HistoryProfileProto {
    required string id = 1;
    required EntityTypeProto type = 2;
    required int64 timestamp = 3;
    required string originalId = 4;
    required bytes original = 5;
}

message EntityPropertyProto {
    required PropertyTypeProto type = 1;
    required string name = 2;
    required string value = 3;

    enum PropertyTypeProto {
        PROPERTY_STRING = 0;
        PROPERTY_LONG = 1;
        PROPERTY_INT = 2;
        PROPERTY_BOOL = 3;
    }
}

message SingleEntityRequestProto {
    required EntityTypeProto type = 1;
    required string id = 2;
}

message SingleEntityResponseProto {
    required EntityTypeProto type = 1;
    optional bytes entity = 2;
}

message MultiEntityRequestProto {
    required EntityTypeProto type = 1;
    repeated EntityPropertyProto properties = 2;
}

message MultiEntityResponseProto {
    required EntityTypeProto type = 1;
    repeated bytes entities = 2;
}

message SimpleRequestProto {
    required SimpleRequestTypeProto type = 1;
    optional bytes payload = 2;

    enum SimpleRequestTypeProto {
        REQ_CONFIG = 0;
        REQ_INIT = 1;
        REQ_REINIT = 2;
        REQ_START = 3;
        REQ_STOP = 4;
    }
}

message ConfigurationPropertiesProto{
    repeated StringStringMapProto properties = 1;
}

message SimpleResponseProto {
    required bool successful = 1;
    optional string text = 2;
    required SimpleResponseTypeProto type = 3;
    optional bytes payload = 4;
    optional SerializedExceptionProto exception = 5;

    enum SimpleResponseTypeProto {
        RESP_NUM_NODES = 0;
    }
}

message ConfigurationRequestProto {
    repeated StringStringMapProto properties = 1;
}

message POSUMNodeProto {
    required NodeIdProto nodeId = 1;
    required string hostname = 2;
    required int32 commandPort = 3;
    required int32 httpPort = 4;
    optional ResourceProto totalCapability = 5;
    optional string rackName = 6;
    repeated UpdatedContainerInfoProto containerUpdates = 7;
    repeated string nodeLabels = 8;
}

message UpdatedContainerInfoProto {
    repeated ContainerStatusProto newContainers = 7;
    repeated ContainerStatusProto completedContainers = 8;
}

message HandleSchedulerEventRequestProto {
    required SchedulerEventTypeProto eventType = 1;
    optional POSUMNodeProto node = 2;
    repeated NMContainerStatusProto containerReports = 3;
    optional ResourceOptionProto resourceOption = 4;
    optional bool flag = 5;
    optional ApplicationIdProto applicationId = 6;
    optional string queue = 7;
    optional string user = 8;
    optional string finalState = 9;
    optional int32 attemptId = 10;
    optional int64 containerId = 11;
    optional ReservationIdProto reservationId = 12;
    optional GetNodesToLabelsResponseProto updatedNodeLabels = 13;

    enum SchedulerEventTypeProto {
        EVENT_NODE_ADDED = 0;
        EVENT_NODE_REMOVED = 1;
        EVENT_NODE_UPDATE = 2;
        EVENT_NODE_RESOURCE_UPDATE = 3;
        EVENT_NODE_LABELS_UPDATE = 4;
        EVENT_APP_ADDED = 5;
        EVENT_APP_REMOVED = 6;
        EVENT_APP_ATTEMPT_ADDED = 7;
        EVENT_APP_ATTEMPT_REMOVED = 8;
        EVENT_CONTAINER_EXPIRED = 9;
    }
}

message HandleRMEventRequestProto {
    required RMEventClassProto eventClass = 1;
    required string eventType = 2;
    optional ApplicationIdProto applicationId = 3;
    optional string queue = 4;
    optional int32 attemptId = 5;
    optional int64 containerId = 6;
    optional NodeIdProto nodeId = 7;

    enum RMEventClassProto {
        RMEVENT_RMNodeCleanContainerEvent = 0;
        RMEVENT_RMAppEvent = 1;
        RMEVENT_RMAppMoveEvent = 2;
    }

}

message SchedulerAllocateRequestProto {
    required ApplicationAttemptIdProto applicationAttemptId = 1;
    repeated ResourceRequestProto resourceRequests = 2;
    repeated ContainerIdProto releases = 3;
    repeated string blacklistAdditions = 4;
    repeated string blacklistRemovals = 5;
}

message SchedulerAllocateResponseProto {
    repeated ContainerProto containers = 1;
    optional ResourceProto resourceLimit = 2;
    repeated ContainerIdProto strictContainers = 3;
    repeated ContainerIdProto fungibleContainers = 4;
    repeated ResourceRequestProto fungibleResources = 5;
    repeated NMTokenProto nmTokens = 6;

}