package hadoop.yarn;

option java_package = "org.apache.hadoop.yarn.proto";

option java_outer_classname = "PosumProtos";

import "yarn_protos.proto";

import "yarn_service_protos.proto";

import "yarn_server_common_service_protos.proto";

// --------- Entities ---------

message DatabaseProto {
    required DatabaseTypeProto type = 1;
    optional string view = 2;
    enum DatabaseTypeProto {
        DB_MAIN = 0;
        DB_LOGS = 1;
        DB_SIMULATION = 2;
    }
}

enum EntityCollectionProto {
    COLL_APP = 0;
    COLL_JOB = 1;
    COLL_TASK = 2;
    COLL_JOB_CONF = 3;
    COLL_COUNTER = 4;
    COLL_APP_HISTORY = 5;
    COLL_JOB_HISTORY = 6;
    COLL_TASK_HISTORY = 7;
    COLL_JOB_CONF_HISTORY = 8;
    COLL_COUNTER_HISTORY = 9;
    COLL_HISTORY = 10;
    COLL_POSUM_STATS = 11;
    COLL_PREDICTOR_LOG = 12;
    COLL_AUDIT_LOG = 13;
    COLL_DEADLINE = 14;
}

message AppProfileProto {
    required string id = 1;
    optional int64 startTime = 2;
    optional int64 finishTime = 3;
    optional string user = 4;
    optional string name = 5;
    optional string queue = 6;
    optional AppStateProto state = 7;
    optional AppStatusProto status = 8;
    optional AppTrackingUIProto trackingUI = 9;
    optional int64 lastUpdated = 10;

    enum AppStateProto {
        STATE_NEW = 0;
        STATE_NEW_SAVING = 1;
        STATE_SUBMITTED = 2;
        STATE_ACCEPTED = 3;
        STATE_RUNNING = 4;
        STATE_FINISHED = 5;
        STATE_FAILED = 6;
        STATE_KILLED = 7;
    }

    enum AppStatusProto {
        STATUS_UNDEFINED = 0;
        STATUS_SUCCEEDED = 1;
        STATUS_FAILED = 2;
        STATUS_KILLED = 3;
    }

    enum AppTrackingUIProto {
        UI_RM = 0;
        UI_AM = 1;
        UI_HISTORY = 2;
    }
}

message JobProfileProto {
    required string id = 1;
    optional string name = 2;
    optional string appId = 3;
    optional string user = 4;
    optional string queue = 5;
    optional int32 totalMapTasks = 6;
    optional int32 totalReduceTasks = 7;
    optional int64 totalSplitSize = 8; // only from conf
    optional int64 inputBytes = 9; // ongoing
    optional int64 mapOutputBytes = 10;
    optional int64 reduceInputBytes = 11;
    optional int64 outputBytes = 12;
    optional int64 submitTime = 13;
    optional int64 startTime = 14;
    optional int64 finishTime = 15;
    optional JobStateProto state = 16;
    optional float mapProgress = 17;
    optional float reduceProgress = 18;
    optional int32 completedMaps = 19;
    optional int32 completedReduces = 20;
    optional bool uberized = 21;
    optional int64 avgMapDuration = 22;
    optional int64 avgReduceDuration = 23;
    optional int64 avgTaskDuration = 24;
    optional int64 avgShuffleTime = 25;
    optional int64 avgMergeTime = 26;
    optional int64 avgReduceTime = 27;
    optional string mapperClass = 28;
    optional string reducerClass = 29;
    optional StringStringMapPayloadProto flexFields = 30;
    repeated StringListPayloadProto splitLocations = 31;
    repeated int64 splitSizes = 32;
    optional int64 lastUpdated = 33;
    optional int64 deadline = 34;
    optional string hostName = 35;


    enum JobStateProto {
        STATE_NEW = 0;
        STATE_INITED = 1;
        STATE_RUNNING = 2;
        STATE_SUCCEEDED = 3;
        STATE_FAILED = 4;
        STATE_KILLED = 5;
        STATE_ERROR = 6;
    }
}

message JobConfProxyProto {
    required string id = 1;
    optional StringStringMapPayloadProto properties = 2;
    optional string confPath = 3;
    optional int64 lastUpdated = 4;
}

message TaskProfileProto {
    required string id = 1;
    optional string appId = 2;
    optional string jobId = 3;
    optional int64 inputBytes = 4;
    optional int64 inputRecords = 5;
    optional int64 outputBytes = 6;
    optional int64 outputRecords = 7;
    optional int64 startTime = 8;
    optional int64 finishTime = 9;
    optional TaskTypeProto type = 10;
    optional float reportedProgress = 11;
    optional string successfulAttempt = 12;
    optional int64 shuffleTime = 13;
    optional int64 mergeTime = 14;
    optional int64 reduceTime = 15;
    optional bool local = 16;
    optional string hostName = 17;
    optional TaskStateProto state = 18;
    optional int64 lastUpdated = 19;
    repeated string splitLocations = 20;
    optional int64 splitSize = 21;

    enum TaskTypeProto {
        TYPE_MAP = 0;
        TYPE_REDUCE = 1;
    }

    enum TaskStateProto {
        STATE_NEW = 0;
        STATE_SCHEDULED = 1;
        STATE_RUNNING = 2;
        STATE_SUCCEEDED = 3;
        STATE_FAILED = 4;
        STATE_KILLED = 5;
    }
}

message HistoryProfileProto {
    required string id = 1;
    required EntityCollectionProto collection = 2;
    required string originalId = 3;
    required bytes original = 4;
    optional int64 lastUpdated = 5;
}

message LogEntryProto {
    required string id = 1;
    required LogTypeProto type = 2;
    optional bytes details = 3;
    optional int64 lastUpdated = 4;

    enum LogTypeProto {
        LG_POLICY_CHANGE = 1;
        LG_POLICY_MAP = 2;
        LG_TASK_PREDICTION = 3;
        LG_GENERAL = 4;
        LG_ACTIVE_NODES = 5;
        LG_NODE_ADD = 6;
        LG_NODE_REMOVE = 7;
        LG_SYSTEM_METRICS = 8;
        LG_CLUSTER_METRICS = 9;
    }
}

message CountersProxyProto {
    required string id = 1;
    repeated CounterGroupInfoPayloadProto groups = 2;
    optional int64 lastUpdated = 3;
}

message ExternalDeadlineProto {
    required string id = 1;
    optional int64 deadline = 2;
    optional int64 lastUpdated = 3;
}

// --------- Requests ---------

message SimpleRequestProto {
    required SimpleRequestTypeProto type = 1;
    optional bytes payload = 2;

    enum SimpleRequestTypeProto {
        REQ_PING = 0;
        REQ_CHANGE_POLICY = 1;
        REQ_START = 2;
        REQ_SYSTEM_ADDRESSES = 3;
        REQ_LIST_COLLECTIONS = 4;
        REQ_CLEAR_DATA = 5;
        REQ_CLEAR_DB = 6;
        REQ_COPY_DB = 7;
        REQ_COPY_COLL = 8;
        REQ_AWAIT_UPDATE = 9;
        REQ_NOTIFY_UPDATE = 10;
        REQ_RESET = 11;
    }
}

message HandleSimResultRequestProto {
    repeated SimulationResultPayloadProto results = 1;
}

message RegistrationRequestProto {
    required PosumProcessProto process = 1;
    required string connectAddress = 2;

    enum PosumProcessProto {
        PROCESS_PM = 0;
        PROCESS_DM = 1;
        PROCESS_SM = 2;
        PROCESS_PS = 3;
    }
}

message DatabaseCallExecutionRequestProto {
    optional DatabaseProto db = 1;
    required DatabaseCallProto call = 2;
}

// --------- Responses ---------

message SimpleResponseProto {
    required bool successful = 1;
    optional string text = 2;
    required PayloadTypeProto type = 3;
    optional bytes payload = 4;
    optional string exception = 5;
}

// --------- Payloads ---------

enum PayloadTypeProto {
    PLD_VOID = 0;
    PLD_SINGLE_ENTITY = 1;
    PLD_MULTI_ENTITY = 2;
    PLD_STRING_STRING_MAP = 3;
    PLD_STRING_LIST = 4;
    PLD_SIMPLE_PROPERTY = 5;
    PLD_COLLECTION_MAP = 6;
    PLD_POLICY_INFO_MAP = 7;
    PLD_PROPERTY_MAP = 8;
}

message SimplePropertyPayloadProto {
    required PropertyTypeProto type = 1;
    optional string name = 2;
    optional string value = 3;

    enum PropertyTypeProto {
        PROP_STRING = 0;
        PROP_LONG = 1;
        PROP_INT = 2;
        PROP_BOOL = 3;
        PROP_ENUM = 4;
    }
}

message PolicyInfoMapPayloadProto {
    repeated PolicyInfoPayloadProto entries = 1;
}

message PolicyInfoPayloadProto {
    optional string policyName = 1;
    optional uint32 usageNumber = 2;
    optional uint64 usageTime = 3;
    optional uint64 lastStarted = 4;
}

message CollectionMapPayloadProto {
    repeated CollectionEntryProto entries = 1;
}

message CollectionEntryProto {
    required DatabaseProto db = 1;
    repeated EntityCollectionProto collections = 2;
}

message SingleEntityPayloadProto {
    required EntityCollectionProto collection = 1;
    optional bytes entity = 2;
}

message MultiEntityPayloadProto {
    required EntityCollectionProto collection = 1;
    repeated bytes entities = 2;
}

message SimulationResultPayloadProto {
    required string policyName = 1;
    optional CompoundScorePayloadProto score = 2;
}

message CompoundScorePayloadProto {
    optional double slowdown = 1;
    optional double penalty = 2;
    optional double cost = 3;
}

message StringStringMapPayloadProto {
     repeated StringStringMapProto entries = 1;
}

message PropertyMapPayloadProto {
    repeated SimplePropertyPayloadProto entries = 1;
}

message StringListPayloadProto {
    repeated string entries = 1;
}

message CounterGroupInfoPayloadProto {
    required string name = 1;
    repeated CounterInfoPayloadProto counters = 2;
}

message CounterInfoPayloadProto {
    required string name = 1;
    optional int64 total = 2;
    optional int64 map = 3;
    optional int64 reduce = 4;
}

message TaskPredictionPayloadProto {
    required string predictor = 1;
    required string id = 2;
    optional int64 duration = 3;
}

message DatabaseAlterationPayloadProto {
    optional DatabaseProto source = 1;
    optional DatabaseProto destination = 2;
    optional EntityCollectionProto targetCollection = 3;
}

// --------- Database Calls ---------


message DatabaseCallProto {
    required CallTypeProto type = 1;
    required bytes call = 2;

    enum CallTypeProto {
        CALL_FIND_BY_ID = 0;
        CALL_FIND_BY_PARAMS = 1;
        CALL_STORE = 2;
        CALL_UPDATE_OR_STORE = 3;
        CALL_DELETE_BY_ID = 4;
        CALL_DELETE_BY_PARAMS = 5;
        CALL_JOB_FOR_APP = 6;
        CALL_SAVE_FLEX_FIELDS = 7;
        CALL_IDS_BY_PARAMS = 8;
        CALL_TRANSACTION = 9;
        CALL_STORE_LOG = 10;
        CALL_FIND_BY_QUERY = 11;
        CALL_DOCUMENTS_BY_QUERY = 12;
        CALL_STORE_ALL = 13;
    }
}

message ByIdCallProto {
    required EntityCollectionProto collection = 1;
    required string id = 2;
}

message ByParamsCallProto {
    required EntityCollectionProto collection = 1;
    repeated SimplePropertyPayloadProto properties = 2;
    optional string sortField = 3;
    optional bool sortDescending = 4;
    optional int32 offset = 5;
    optional int32 limit = 6;
}

message ByQueryCallProto {
    required EntityCollectionProto collection = 1;
    optional DatabaseQueryProto query = 2;
    optional string sortField = 3;
    optional bool sortDescending = 4;
    optional int32 offset = 5;
    optional int32 limit = 6;
}

message TransactionCallProto {
    repeated DatabaseCallProto calls = 1;
}

message JobForAppCallProto {
    required string appId = 1;
}

message SaveJobFlexFieldsCallProto {
    required string jobId = 1;
    required StringStringMapPayloadProto newFields = 2;
    optional bool forHistory = 3;
}

message DatabaseQueryProto {
    required TypeProto type = 1;
    required bytes query = 2;

    enum TypeProto {
        QRY_COMPOSITION = 0;
        QRY_PROPERTY_VALUE = 1;
        QRY_PROPERTY_IN = 2;
    }
}

message PropertyValueQueryProto {
    required TypeProto type = 1;
    required SimplePropertyPayloadProto property = 2;

    enum TypeProto {
        VQRY_IS = 0;
        VQRY_IS_NOT = 1;
        VQRY_LESS = 2;
        VQRY_LESS_OR_EQUAL = 3;
        VQRY_GREATER = 4;
        VQRY_GREATER_OR_EQUAL = 5;
    }
}

message CompositionQueryProto {
    required TypeProto type = 1;
    repeated DatabaseQueryProto queries = 2;

    enum TypeProto {
        CQRY_AND = 0;
        CQRY_OR = 1;
    }
}

message PropertyRangeQueryProto {
    required string propertyName = 1;
    required TypeProto type = 2;
    repeated SimplePropertyPayloadProto values = 3;

    enum TypeProto {
        RQRY_IN = 0;
        RQRY_NOT_IN = 1;
    }
}